CREATE OR REPLACE PROCEDURE flight_performance_summary(
    p_start_date DATE,
    p_end_date DATE
) IS
    CURSOR flight_summary_cursor IS
        SELECT f.airplane_id, a.model, 
               COUNT(*) AS total_flights,
               AVG((f.arrival_time - f.departure_time) * 24 * 60 * 60) AS avg_flight_duration,  -- in seconds
               SUM(CASE WHEN f.status = 'Delayed' THEN 1 ELSE 0 END) AS delayed_flights,
               SUM(CASE WHEN f.status = 'Cancelled' THEN 1 ELSE 0 END) AS cancelled_flights
        FROM Flights f
        JOIN Airplanes a ON f.airplane_id = a.airplane_id
        WHERE f.departure_time BETWEEN p_start_date AND p_end_date
        GROUP BY f.airplane_id, a.model;

    CURSOR route_performance_cursor (p_airplane_id VARCHAR2) IS
        SELECT f.origin, f.destination, 
               COUNT(*) AS route_flights,
               AVG((f.arrival_time - f.departure_time) * 24 * 60 * 60) AS avg_route_duration,  -- in seconds
               SUM(CASE WHEN f.status = 'Delayed' THEN 1 ELSE 0 END) AS route_delayed_flights
        FROM Flights f
        WHERE f.airplane_id = p_airplane_id
          AND f.departure_time BETWEEN p_start_date AND p_end_date
        GROUP BY f.origin, f.destination;

    v_total_flights NUMBER := 0;
    v_total_delayed NUMBER := 0;
    v_total_cancelled NUMBER := 0;
BEGIN
    DBMS_OUTPUT.PUT_LINE('Flight Performance Summary Report');
    DBMS_OUTPUT.PUT_LINE('Period: ' || TO_CHAR(p_start_date, 'DD-MON-YYYY') || ' to ' || TO_CHAR(p_end_date, 'DD-MON-YYYY'));
    DBMS_OUTPUT.PUT_LINE('--------------------------------------------');

    FOR flight_summary IN flight_summary_cursor LOOP
        DBMS_OUTPUT.PUT_LINE('Airplane: ' || flight_summary.airplane_id || ' (' || flight_summary.model || ')');
        DBMS_OUTPUT.PUT_LINE('  Total Flights: ' || flight_summary.total_flights);

        -- Convert avg_flight_duration from seconds to HH24:MI:SS
        DBMS_OUTPUT.PUT_LINE('  Average Flight Duration: ' || 
                             TRIM(TO_CHAR(TRUNC(flight_summary.avg_flight_duration/3600), '00')) || ':' ||
                             TRIM(TO_CHAR(TRUNC(MOD(flight_summary.avg_flight_duration, 3600)/60), '00')) || ':' ||
                             TRIM(TO_CHAR(MOD(flight_summary.avg_flight_duration, 60), '00')));

        DBMS_OUTPUT.PUT_LINE('  Delayed Flights: ' || flight_summary.delayed_flights);
        DBMS_OUTPUT.PUT_LINE('  Cancelled Flights: ' || flight_summary.cancelled_flights);
        DBMS_OUTPUT.PUT_LINE('  Route Performance:');

        FOR route_perf IN route_performance_cursor(flight_summary.airplane_id) LOOP
            DBMS_OUTPUT.PUT_LINE('    ' || route_perf.origin || ' to ' || route_perf.destination);
            DBMS_OUTPUT.PUT_LINE('      Flights: ' || route_perf.route_flights);

            -- Convert avg_route_duration from seconds to HH24:MI:SS
            DBMS_OUTPUT.PUT_LINE('      Avg Duration: ' || 
                                 TRIM(TO_CHAR(TRUNC(route_perf.avg_route_duration/3600), '00')) || ':' ||
                                 TRIM(TO_CHAR(TRUNC(MOD(route_perf.avg_route_duration, 3600)/60), '00')) || ':' ||
                                 TRIM(TO_CHAR(MOD(route_perf.avg_route_duration, 60), '00')));

            DBMS_OUTPUT.PUT_LINE('      Delayed: ' || route_perf.route_delayed_flights);
        END LOOP;

        DBMS_OUTPUT.PUT_LINE('--------------------------------------------');

        v_total_flights := v_total_flights + flight_summary.total_flights;
        v_total_delayed := v_total_delayed + flight_summary.delayed_flights;
        v_total_cancelled := v_total_cancelled + flight_summary.cancelled_flights;
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Overall Summary:');
    DBMS_OUTPUT.PUT_LINE('  Total Flights: ' || v_total_flights);
    DBMS_OUTPUT.PUT_LINE('  Total Delayed Flights: ' || v_total_delayed);
    DBMS_OUTPUT.PUT_LINE('  Total Cancelled Flights: ' || v_total_cancelled);

    IF v_total_flights > 0 THEN
        DBMS_OUTPUT.PUT_LINE('  On-Time Performance: ' || 
            TO_CHAR(((v_total_flights - v_total_delayed - v_total_cancelled) / v_total_flights) * 100, '999.99') || '%');
    ELSE
        DBMS_OUTPUT.PUT_LINE('  On-Time Performance: N/A (No flights recorded)');
    END IF;
END;
/